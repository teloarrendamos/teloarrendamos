<section class="new-listing">
	<%= render "form", form_resources: @listing %>
</section>

<script>
	var map;
	function initMap() {
		var mapOptions = {
			center: {lat: -33.4488897, lng: -70.6692655},
			zoom: 12
		}

		// var defaultBounds = new google.maps.LatLngBounds(
		// 	new google.maps.LatLng(-33.8902, 151.1759),
		// 	new google.maps.LatLng(-33.8474, 151.2631)
		// );

		map = new google.maps.Map(document.getElementById('map'), mapOptions);

		var input = document.getElementById('pac-input');

		// var options = {
		// 	bounds: defaultBounds,
		// 	types: ['address']
		// };

		var searchBox = new google.maps.places.SearchBox(input)

	    var markers = [];
	    // Listen for the event fired when the user selects a prediction and retrieve
	    // more details for that place.
    	searchBox.addListener('places_changed', function() {
	        var places = searchBox.getPlaces();

	        if (places.length == 0) {
	            return;
	        }

	        // Clear out the old markers.
	        markers.forEach(function(marker) {
	            marker.setMap(null);
	        });

	        markers = [];

	        // For each place, get the icon, name and location.
        	var bounds = new google.maps.LatLngBounds();
	        places.forEach(function(place) {
	            var icon = {
	                url: place.icon,
	                size: new google.maps.Size(71, 71),
	                origin: new google.maps.Point(0, 0),
	                anchor: new google.maps.Point(17, 34),
	                scaledSize: new google.maps.Size(25, 25)
	            };

	            // Create a marker for each place.
	            markers.push(new google.maps.Marker({
	                map: map,
	                icon: icon,
	                title: place.name,
	                position: place.geometry.location
	            }));

	            if (place.geometry.viewport) {
	                // Only geocodes have viewport.
	                bounds.union(place.geometry.viewport);
	            } else {
	                bounds.extend(place.geometry.location);
	            }
	        });

	        map.fitBounds(bounds);
	    });

		var addressInput = document.getElementById('pac-input');
		var latInput = document.getElementById('lat-input');
		var lngInput = document.getElementById('lng-input');

		var useCoordinate = function(lat, lng) {
			latInput.value = lat;
			lngInput.value = lng;
		}

		function getCoordinates(address, callback) {
			var location = new google.maps.Geocoder();
			location.geocode( { 'address': address}, function(results, status) {
				if (status == google.maps.GeocoderStatus.OK) {
					callback(results[0].geometry.location.lat(), results[0].geometry.location.lng());
				} else {
					alert(status + ", Hay un problema con la direccion, favor intentar denuevo")
				}
			});
		}

		addressInput.addEventListener('keypress', function(e) {
			if(e.which == 13) {
				getCoordinates(this.value, useCoordinate);
			}
		})
	}
</script>
